/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.aspectj.RelationshipManager;

import java.awt.Color;
import java.util.Collection;
import javax.swing.table.DefaultTableModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.aspectj.file.AspectJSpringFileDataObject;


import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.*;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.netbeans.aspectj.RelationshipManager//relationshipManager//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "relationshipManagerTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "navigator", openAtStartup = true)
@ActionID(category = "Window", id = "org.netbeans.aspectj.RelationshipManager.relationshipManagerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_relationshipManagerAction",
        preferredID = "relationshipManagerTopComponent"
)
@Messages({
    "CTL_relationshipManagerAction=relationshipManager",
    "CTL_relationshipManagerTopComponent=Relationship Manager Window",
    "HINT_relationshipManagerTopComponent=This is a relationshipManager window"
})
    
public final class relationshipManagerTopComponent extends TopComponent implements LookupListener {

private Lookup.Result<AspectJSpringFileDataObject> result = null;

    public relationshipManagerTopComponent() {
        initComponents();
        setName(Bundle.CTL_relationshipManagerTopComponent());
        setToolTipText(Bundle.HINT_relationshipManagerTopComponent());
        /*TopComponent win = RelationshipTableTopComponent.findInstance();
        win.open();
        win.requestActive();*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottomBarPanel = new javax.swing.JPanel();
        showNonPublicMembersButton = new javax.swing.JButton();
        showFieldsButton = new javax.swing.JButton();
        showStaticMethodsButton = new javax.swing.JButton();
        showAdvicesButton = new javax.swing.JButton();
        showPointcutsButton = new javax.swing.JButton();
        sortByNameButton = new javax.swing.JButton();
        sortBySourceButton = new javax.swing.JButton();
        navigateBackButton = new javax.swing.JButton();
        navigateForwardButton = new javax.swing.JButton();
        showMethodsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        showMethodsButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        bottomBarPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        showNonPublicMembersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showNonPublicMembers.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showNonPublicMembersButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showNonPublicMembersButton.text")); // NOI18N
        showNonPublicMembersButton.setBorderPainted(false);
        showNonPublicMembersButton.setFocusPainted(false);
        showNonPublicMembersButton.setFocusable(false);
        showNonPublicMembersButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.setName("showNonPublicMembers"); // NOI18N
        showNonPublicMembersButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showNonPublicMembersButtonActionPerformed(evt);
            }
        });

        showFieldsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showFields.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showFieldsButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showFieldsButton.text")); // NOI18N
        showFieldsButton.setBorderPainted(false);
        showFieldsButton.setFocusPainted(false);
        showFieldsButton.setFocusable(false);
        showFieldsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showFieldsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showFieldsButton.setName("showFields"); // NOI18N
        showFieldsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFieldsButtonActionPerformed(evt);
            }
        });

        showStaticMethodsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showStaticMembers.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showStaticMethodsButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showStaticMethodsButton.text")); // NOI18N
        showStaticMethodsButton.setBorderPainted(false);
        showStaticMethodsButton.setFocusPainted(false);
        showStaticMethodsButton.setFocusable(false);
        showStaticMethodsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.setName("showStaticMembers"); // NOI18N
        showStaticMethodsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStaticMethodsButtonActionPerformed(evt);
            }
        });

        showAdvicesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showAdvices.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showAdvicesButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showAdvicesButton.text")); // NOI18N
        showAdvicesButton.setBorderPainted(false);
        showAdvicesButton.setFocusPainted(false);
        showAdvicesButton.setFocusable(false);
        showAdvicesButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.setName("showAdvices"); // NOI18N
        showAdvicesButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAdvicesButtonActionPerformed(evt);
            }
        });

        showPointcutsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showPointcuts.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showPointcutsButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showPointcutsButton.text")); // NOI18N
        showPointcutsButton.setBorderPainted(false);
        showPointcutsButton.setFocusPainted(false);
        showPointcutsButton.setFocusable(false);
        showPointcutsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.setName("showPointcuts"); // NOI18N
        showPointcutsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPointcutsButtonActionPerformed(evt);
            }
        });

        sortByNameButton.setBackground(java.awt.Color.darkGray);
        sortByNameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/sortByName.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sortByNameButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.sortByNameButton.text")); // NOI18N
        sortByNameButton.setBorderPainted(false);
        sortByNameButton.setFocusPainted(false);
        sortByNameButton.setFocusable(false);
        sortByNameButton.setMaximumSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setMinimumSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setName("sortByName"); // NOI18N
        sortByNameButton.setPreferredSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setSelected(true);
        sortByNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByNameButtonActionPerformed(evt);
            }
        });

        sortBySourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/sortBySource.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sortBySourceButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.sortBySourceButton.text")); // NOI18N
        sortBySourceButton.setBorderPainted(false);
        sortBySourceButton.setFocusPainted(false);
        sortBySourceButton.setFocusable(false);
        sortBySourceButton.setMaximumSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.setMinimumSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.setName("sortBySource"); // NOI18N
        sortBySourceButton.setPreferredSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBySourceButtonActionPerformed(evt);
            }
        });

        navigateBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/navigateBack.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(navigateBackButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.navigateBackButton.text")); // NOI18N
        navigateBackButton.setBorderPainted(false);
        navigateBackButton.setFocusPainted(false);
        navigateBackButton.setFocusable(false);
        navigateBackButton.setMaximumSize(new java.awt.Dimension(25, 25));
        navigateBackButton.setMinimumSize(new java.awt.Dimension(25, 25));
        navigateBackButton.setName("navigateBack"); // NOI18N
        navigateBackButton.setPreferredSize(new java.awt.Dimension(25, 25));

        navigateForwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/navigateForward.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(navigateForwardButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.navigateForwardButton.text")); // NOI18N
        navigateForwardButton.setBorderPainted(false);
        navigateForwardButton.setFocusPainted(false);
        navigateForwardButton.setFocusable(false);
        navigateForwardButton.setMaximumSize(new java.awt.Dimension(25, 25));
        navigateForwardButton.setMinimumSize(new java.awt.Dimension(25, 25));
        navigateForwardButton.setName("navigateForward"); // NOI18N
        navigateForwardButton.setPreferredSize(new java.awt.Dimension(25, 25));

        showMethodsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showMethodsButton, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showMethodsButton.text")); // NOI18N
        showMethodsButton.setBorderPainted(false);
        showMethodsButton.setFocusPainted(false);
        showMethodsButton.setFocusable(false);
        showMethodsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showMethodsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showMethodsButton.setName("showMethods"); // NOI18N
        showMethodsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMethodsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomBarPanelLayout = new javax.swing.GroupLayout(bottomBarPanel);
        bottomBarPanel.setLayout(bottomBarPanelLayout);
        bottomBarPanelLayout.setHorizontalGroup(
            bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showStaticMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showNonPublicMembersButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showAdvicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPointcutsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortByNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortBySourceButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(navigateBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(navigateForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bottomBarPanelLayout.setVerticalGroup(
            bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomBarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(navigateForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(navigateBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortBySourceButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortByNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showPointcutsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showAdvicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showStaticMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showNonPublicMembersButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.jLabel1.text")); // NOI18N

        showMethodsButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/aspectj/RelationshipManager/aspect.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showMethodsButton1, org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.showMethodsButton1.text")); // NOI18N
        showMethodsButton1.setBorderPainted(false);
        showMethodsButton1.setFocusPainted(false);
        showMethodsButton1.setFocusable(false);
        showMethodsButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        showMethodsButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        showMethodsButton1.setName("showMethods"); // NOI18N
        showMethodsButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        showMethodsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMethodsButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.jTable1.columnModel.title0")); // NOI18N
            jTable1.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.jTable1.columnModel.title1")); // NOI18N
            jTable1.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(relationshipManagerTopComponent.class, "relationshipManagerTopComponent.jTable1.columnModel.title2")); // NOI18N
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bottomBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showMethodsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showMethodsButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(bottomBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showNonPublicMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showNonPublicMembersButtonActionPerformed
        // TODO add your handling code here:
        showNonPublicMembersButton.setSelected(!showNonPublicMembersButton.isSelected());
        if(showNonPublicMembersButton.isSelected())
        {
            showNonPublicMembersButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showNonPublicMembersButton.setBackground(null);
        }

    }//GEN-LAST:event_showNonPublicMembersButtonActionPerformed

    private void showFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFieldsButtonActionPerformed
        // TODO add your handling code here:
        showFieldsButton.setSelected(!showFieldsButton.isSelected());
        if(showFieldsButton.isSelected())
        {
            showFieldsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showFieldsButton.setBackground(null);
        }
    }//GEN-LAST:event_showFieldsButtonActionPerformed

    private void showStaticMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStaticMethodsButtonActionPerformed
        // TODO add your handling code here:
        showStaticMethodsButton.setSelected(!showStaticMethodsButton.isSelected());
        if(showStaticMethodsButton.isSelected())
        {
            showStaticMethodsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showStaticMethodsButton.setBackground(null);
        }
    }//GEN-LAST:event_showStaticMethodsButtonActionPerformed

    private void showAdvicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAdvicesButtonActionPerformed
        // TODO add your handling code here:
        showAdvicesButton.setSelected(!showAdvicesButton.isSelected());
        if(showAdvicesButton.isSelected())
        {
            showAdvicesButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showAdvicesButton.setBackground(null);
        }
    }//GEN-LAST:event_showAdvicesButtonActionPerformed

    private void showPointcutsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPointcutsButtonActionPerformed
        // TODO add your handling code here:
        showPointcutsButton.setSelected(!showPointcutsButton.isSelected());
        if(showPointcutsButton.isSelected())
        {
            showPointcutsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showPointcutsButton.setBackground(null);
        }
        
    }//GEN-LAST:event_showPointcutsButtonActionPerformed

    private void sortByNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByNameButtonActionPerformed
        // TODO add your handling code here:
        if(!sortByNameButton.isSelected())
        {
            sortByNameButton.setBackground(Color.DARK_GRAY);
            sortByNameButton.setSelected(true);
            sortBySourceButton.setSelected(false);
            sortBySourceButton.setBackground(null);
        }
    }//GEN-LAST:event_sortByNameButtonActionPerformed

    private void sortBySourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBySourceButtonActionPerformed
        // TODO add your handling code here:
        if(!sortBySourceButton.isSelected())
        {
            sortBySourceButton.setBackground(Color.DARK_GRAY);
            sortBySourceButton.setSelected(true);
            sortByNameButton.setSelected(false);
            sortByNameButton.setBackground(null);
        }
    }//GEN-LAST:event_sortBySourceButtonActionPerformed

    private void showMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMethodsButtonActionPerformed
        // TODO add your handling code here:
        showMethodsButton.setSelected(!showMethodsButton.isSelected());
        if(showMethodsButton.isSelected())
        {
            showMethodsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showMethodsButton.setBackground(null);
        }
    }//GEN-LAST:event_showMethodsButtonActionPerformed

    private void showMethodsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMethodsButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showMethodsButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomBarPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JButton navigateBackButton;
    private javax.swing.JButton navigateForwardButton;
    private javax.swing.JButton showAdvicesButton;
    private javax.swing.JButton showFieldsButton;
    private javax.swing.JButton showMethodsButton;
    private javax.swing.JButton showMethodsButton1;
    private javax.swing.JButton showNonPublicMembersButton;
    private javax.swing.JButton showPointcutsButton;
    private javax.swing.JButton showStaticMethodsButton;
    private javax.swing.JButton sortByNameButton;
    private javax.swing.JButton sortBySourceButton;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        result = Utilities.actionsGlobalContext().lookupResult(AspectJSpringFileDataObject.class);
       result.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

   

   @Override
    public void resultChanged(LookupEvent le) {
        Collection<? extends AspectJSpringFileDataObject> allEvents = result.allInstances();
       if (!allEvents.isEmpty()){
            AspectJSpringFileDataObject event = allEvents.iterator().next();
            //jLabel1.setText(event.getDate().toString());
        } else {
            jLabel1.setText("no Selection");

        }
    }

}
